{"version":3,"sources":["components/header/index.js","components/header/header.js","components/spinner/index.js","components/spinner/spinner.js","services/swapi-service.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/index.js","components/item-list/item-list.js","components/person-details/index.js","components/person-details/person-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","react_default","a","createElement","className","href","Spinner","SwapiService","_apiBase","url","fetch","concat","this","res","ok","Error","status","json","getResource","results","map","_transformPerson","id","person","_transformPlanet","planet","_transformStarship","starship","item","match","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","RandomPlanet","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","swapiService","state","loading","onPlanetLoaded","setState","updatePlanet","min","max","Math","floor","random","getRandomInt","getPlanet","then","_this$state","components_spinner","random_planet_PlanetView","Component","PlanetView","_ref","_ref$planet","Fragment","src","ItemList","PersonDetails","App","components_header","components_random_planet","components_item_list","components_person_details","require","publish","err","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.38f261ea.chunk.js","sourcesContent":["import Header from \"./header\"\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header d-flex\">\r\n      <h3>\r\n        <a href=\"#\">\r\n          StarDB\r\n        </a>\r\n      </h3>\r\n      <ul className=\"d-flex\">\r\n        <li>\r\n          <a href=\"#\">People</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Planets</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Starships</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import Spinner from \"./spinner\"\r\nexport default Spinner;","import React from \"react\"\r\nimport \"./spinner.css\"\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","export default class SwapiService {\r\n\r\n  _apiBase = 'https://swapi.co/api';\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`)\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  async getAllPeople() {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  }\r\n\r\n  async getPerson(id) {\r\n    const person = await this.getResource(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  }\r\n\r\n  async getAllPlanets() {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  }\r\n\r\n  async getPlanet(id) {\r\n    const planet = await this.getResource(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  }\r\n\r\n  async getAllStarships() {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  }\r\n\r\n  async getStarship(id) {\r\n    const starship = this.getResource(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n  }\r\n\r\n  _extractId(item) {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  }\r\n\r\n  _transformPlanet(planet) {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    };\r\n  }\r\n\r\n  _transformStarship(starship) {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.costInCredits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    }\r\n  }\r\n\r\n  _transformPerson(person) {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birthYear,\r\n      eyeColor: person.eyeColor\r\n    }\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport Spinner from \"../spinner\"\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nimport './random-planet.css';\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.updatePlanet();\r\n  }\r\n\r\n\r\n  getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({\r\n      planet, loading: false\r\n    })\r\n  }\r\n\r\n  updatePlanet() {\r\n    const id = this.getRandomInt(1, 10);\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {planet, loading} = this.state;\r\n    return (\r\n\r\n        <div className=\"random-planet jumbotron rounded\">\r\n          {loading ?\r\n            <Spinner/>\r\n            :\r\n            <PlanetView planet={planet}/>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({planet: {name, population, rotationPeriod, diameter, id}}) => (\r\n  <>\r\n    <img className=\"planet-image\"\r\n         src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\r\n    <div>\r\n      <h4>{name}</h4>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item\">\r\n          <span className=\"term\">Population</span>\r\n          <span>{population}</span>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <span className=\"term\">Rotation Period</span>\r\n          <span>{rotationPeriod}</span>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <span className=\"term\">Diameter</span>\r\n          <span>{diameter}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </>\r\n)","import RandomPlanet from \"./random-planet\"\r\n\r\nexport default RandomPlanet;","import ItemList from \"./item-list\"\r\n\r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport './item-list.css';\r\n\r\nexport default class ItemList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"item-list list-group\">\r\n        <li className=\"list-group-item\">\r\n          Luke Skywalker\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Darth Vader\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          R2-D2\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}","import PersonDetails from \"./person-details\"\r\n\r\nexport default PersonDetails;","import React, { Component } from 'react';\r\n\r\nimport './person-details.css';\r\n\r\nexport default class PersonDetails extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"person-details card\">\r\n        <img className=\"person-image\"\r\n             src=\"https://starwars-visualguide.com/assets/img/characters/3.jpg\" />\r\n\r\n        <div className=\"card-body\">\r\n          <h4>R2-D2</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Gender</span>\r\n              <span>male</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Birth Year</span>\r\n              <span>43</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Eye Color</span>\r\n              <span>red</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet';\r\nimport ItemList from '../item-list';\r\nimport PersonDetails from '../person-details';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <RandomPlanet />\r\n\r\n      <div className=\"row mb2\">\r\n        <div className=\"col-md-6\">\r\n          <ItemList />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <PersonDetails />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport SwapiService from \"./services/swapi-service\"\n\nconst swapi = new SwapiService()\n\nvar ghpages = require('gh-pages');\nghpages.publish('dist', function(err) {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}